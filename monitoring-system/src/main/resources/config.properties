# Configurazione applicazione
# mode = local
mode = cluster
kafka-ip = localhost
# topologies = ValidationTopology, FirstTopology
# Per simulare gli end-points
# debug-level = 5
# NOTA: gli endpoints devono avere il seguente formato:
#     [protocollo]://[ipAddress]:[port]/[path]/[%d] oppure
#     [protocollo]://[ipAddress]:[port]/[%d][path] oppure
#     [protocollo]://[ipAddress]:[port]/[%d]/[path]/[%d]
# dove "%d" deve essere sostituito con l'id del sensore che si sta cercando
semaphores-sensors-endpoint = http://localhost:8200/sdcc-admin/semaphore/exist/%d
mobile-sensors-endpoint = http://localhost:8200/sdcc-admin/mobile_sensor/exist/%d

# Dati per la terza topologia
sequences-semaphores-file = /Volumes/Data/Projects/Java/--STORM/trafficcontrol/monitoring-system/src/main/resources/SemaphoresSequencesStructure.json
#########################################################################################
### Assunzione: # I veicoli si muovo lungo una rete definita da meridiani e paralleli ###
#########################################################################################
# Esempio (Manhattan): da "281 11th Ave" (40.752107°, -74.004805°) a
# "Kips Bay" (40.741725°, -73.978209°) c'è una distanza, in linea retta, di 2,8 km circa.
# Con una larghezza di strada di circa 0.000061° (differenza tra -73.994320° e -73.994259°).
# Quindi assumiamo un errore di 0.00003°
road-delta = 0.0001